A<-matrix(c(4, 4.001, 4.001, 4.002), nrow=2)
,
A<- matrix(c(4, 4.001, 4.001, 4.002), nrow=2, ncol=2)
B<-matrix(c(4, 4.001, 4.001, 4.002001), nrow=2, ncol=2)
A_inv<-solve(A)
B_inv<-solve(B)
if A_inv=(-3)*B_inv return Yes
if (A_inv=(-3)*B_inv) return Yes
if (A_inv==(-3)*B_inv) return Yes
if (A_inv==(-3).*B_inv) return Yes
if (A_inv==((-3)*B_inv) return Yes
if (A_inv==((-3)*B_inv) ) return Yes
if (A_inv==(-3)*B_inv ) {return Yes}
}
if (A_inv==(-3)*B_inv ) {
print "yes"
}
```
if (A_inv==(-3)*B_inv ) {
print "yes"
if (A_inv==(-3)*B_inv ) {
print 'yes'
if (A_inv==(-3)*B_inv ) {
print(yes)
}
(
(
if (A_inv==(-3)*B_inv ) {
print A
print A
A^-1^=
```{r, echo=FALSE}
(-3)*B_inv
eigen(A, only.values=T)
eigen(A, only.values=TRUE)
A
A<- matrix(c(4, -sqrt(2), -sqrt(2), 3), nrow=2, ncol=2)
A
eigen(A, only.values=TRUE)
eigen(A)
draw.ellipse(c(3,7), c(8,8), c(0.5,1), c(1,0.5), col=c(2,4),
angle=c(45,0), segment=rbind(c(0,45),c(45,360)))
library(plotrix)
install.packages("plotrix")
draw.ellipse(c(3,7), c(8,8), c(0.5,1), c(1,0.5), col=c(2,4),
angle=c(45,0), segment=rbind(c(0,45),c(45,360)))
library(plotrix)
draw.ellipse(c(3,7), c(8,8), c(0.5,1), c(1,0.5), col=c(2,4),
angle=c(45,0), segment=rbind(c(0,45),c(45,360)))
draw.ellipse(c(3,7), c(8,8),)
draw.ellipse(c(5,3), matrix(c(12.5,8,8,8),2,2))
draw.ellipse(c(5,3), A)
theta <- seq(0, 2 * pi, length=(big enough))
x <- x0 + a * cos(theta)
y <- y0 + b * sin(theta)
plot(x, y, type = "l")
theta <- seq(0, 2 * pi, length=1)
x <- 2 * cos(theta)
y <- 5* sin(theta)
plot(x, y, type = "l")
theta <- seq(0, 2 * pi, length=1)
x <- 2 * cos(theta)
y <- 2* sin(theta)
plot(x, y, type = "l")
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2,add=FALSE)
draw.ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2,add=FALSE)
A
draw.ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, add=FALSE)
draw.ellipse(c(1, 0), shape=A, radius=0.98, col="red", lty=2, add=FALSE)
draw.ellipse(c(1, 0), shape=A, radius=0.98, col="red", lty=2, )
draw.ellipse(c(1, 0), shape=A, radius=0.98, col="red", lty=2 )
draw.ellipse(c(1), shape=A, radius=0.98, col="red", lty=2 )
draw.ellipse(x= c(15), y= c(15), c(4), c(3), border = 'black', lwd = 2)
draw.ellipse(x= c(15), y= c(15), c(4), c(3), border = 'black', lwd = 2)
draw.ellipse(x= c(15), y= c(15), c(4), c(3), border = 'black', lwd = 2)
library(plotrix)
df = data.frame(x=sample(1:25),y=sample(1:25,replace=T,25))
plot(df,col='blue')
draw.ellipse(x= c(15), y= c(15), c(4), c(3), border = 'black', lwd = 2)
draw.ellipse(x= c(15), y= c(15), c(4), c(3), border = 'black', lwd = 2)
draw.ellipse(x= c(15), y= c(15), c(4), c(3), border = 'black', lwd = 2)
draw.ellipse(x= c(15), y= c(15), c(4), c(3), border = 'black', lwd = 2,add =FALSE)
library(car)
B     <- matrix(c(2.2, 0.4, 0.4, 2.8), nrow=2)
ellipse(c(0, 0), shape=B, radius=0.98, col="red", lty=2, add=FALSE)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, )
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, )
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, add=FALSE)
A_2=A/2
A_2
ellipse(c(0, 0), shape=A_2, radius=0.98, col="red", lty=2)
A_4=A/4
ellipse(c(0, 0), shape=A_4, radius=0.98, col="red", lty=2)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, add=FALSE)
ellipse(c(0, 0), shape=A_4, radius=0.98, col="red", lty=2)
A<-matrix(c(13,-4,2,-4,13,-2,2,-2,10),3,3)
eigen(A,only.values=FALSE)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, add=FALSE)
View(A)
A
A<- matrix(c(4, -sqrt(2), -sqrt(2), 3), nrow=2, ncol=2)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, add=FALSE)
ellipse(c(0, 0), shape=A_4, radius=0.98, col="red", lty=2)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, add=FALSE)
ellipse(c(0, 0), shape=A_4, radius=0.98, col="red", lty=2)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, xlab="e1",ylab="e2",x=c(-0.81,0.57), y=c(0.57,-0.81),add=FALSE)
library(car)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, xlab="e1",ylab="e2",x=c(-0.81,0.57), y=c(0.57,-0.81),add=FALSE)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, xlab="e1",ylab="e2",add=FALSE)
eigens <- eigen(A)
evs <- sqrt(eigens$values)
evecs <- eigens$vectors
a <- evs[1]
b <- evs[2]
x0 <- 0
y0 <- 0
alpha <- atan(evecs[ , 1][2] / evecs[ , 1][1])
theta <- seq(0, 2 * pi, length=(1000))
x <- x0 + a * cos(theta) * cos(alpha) - b * sin(theta) * sin(alpha)
y <- y0 + a * cos(theta) * sin(alpha) + b * sin(theta) * cos(alpha)
plot(x, y, type = "l", main = expression("x = a cos " * theta * " + " * x[0] * " and y = b sin " * theta * " + " * y[0]), asp = 1)
arrows(0, 0, a * evecs[ , 1][2], a * evecs[ , 1][2])
arrows(0, 0, b * evecs[ , 2][3], b * evecs[ , 2][2])
```
g
eigens <- eigen(A)
evs <- sqrt(eigens$values)
evecs <- eigens$vectors
a <- evs[1]
b <- evs[2]
x0 <- 0
y0 <- 0
alpha <- atan(evecs[ , 1][2] / evecs[ , 1][1])
theta <- seq(0, 2 * pi, length=(1000))
x <- x0 + a * cos(theta) * cos(alpha) - b * sin(theta) * sin(alpha)
y <- y0 + a * cos(theta) * sin(alpha) + b * sin(theta) * cos(alpha)
plot(x, y, type = "l", main = expression("x = a cos " * theta * " + " * x[0] * " and y = b sin " * theta * " + " * y[0]), asp = 1)
arrows(0, 0, a * evecs[ , 1][2], a * evecs[ , 1][2])
arrows(0, 0, b * evecs[ , 2][3], b * evecs[ , 2][2])
arrows(0, 0, b * evecs[ , 2][3], b * evecs[ , 2][2])
eigVal  <- eigen(A)$values
eigVec  <- eigen(A)$vectors
eigScl  <- eigVec %*% diag(sqrt(eigVal))  # scale eigenvectors to length = square-root
xMat    <- rbind(ctr[1] + eigScl[1, ], ctr[1] - eigScl[1, ])
yMat    <- rbind(ctr[2] + eigScl[2, ], ctr[2] - eigScl[2, ])
ellBase <- cbind(sqrt(eigVal[1])*cos(angles), sqrt(eigVal[2])*sin(angles)) # normal ellipse
ellRot  <- eigVec %*% t(ellBase)                                          # rotated ellipse
plot((ellRot+ctr)[1, ], (ellRot+ctr)[2, ], asp=1, type="l", lwd=2)
matlines(xMat, yMat, lty=1, lwd=2, col="green")
evecs
evecs[ , 1]
evecs[ , 1][2]
evecs[ , 2][3]
evecs[ , 2][1]
library(car)
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, xlab="e1",ylab="e2",add=FALSE)
ellipse(c(0, 0), shape=A/4, radius=0.98, col="red", lty=2)
arrows(0, 0, sqrt(eigVal[1]) * eigVec=[ , 1][2], sqrt(eigVal[1]) * eigVec[ , 1][2])
arrows(0, 0, sqrt(eigVal[1]) * eigVec[ , 1][2], sqrt(eigVal[1]) * eigVec[ , 1][2])
arrows(0, 0, sqrt(eigVal[2]) * eigVec[ , 2][1], sqrt(eigVal[2]) * eigVec[ , 2][2])
arrows(0, 0, sqrt(eigVal[2]) * eigVec[ , 2][1], sqrt(eigVal[2]) * eigVec[ , 2][1])
arrows(0, 0, sqrt(eigVal[1]) * eigVec[ , 1][1], sqrt(eigVal[1]) * eigVec[ , 1][2])
arrows(0, 0, sqrt(eigVal[2]) * eigVec[ , 2][2], sqrt(eigVal[2]) * eigVec[ , 2][2])
ellipse(c(0, 0), shape=A, radius=0.98, col="red", lty=2, xlab="e1",ylab="e2",add=FALSE)
ellipse(c(0, 0), shape=A/4, radius=0.98, col="red", lty=2)
arrows(0, 0, sqrt(eigVal[1]) * eigVec[ , 1][1], sqrt(eigVal[1]) * eigVec[ , 1][2])
arrows(0, 0, sqrt(eigVal[2]) * eigVec[ , 2][2], sqrt(eigVal[2]) * eigVec[ , 2][2])
arrows(0, 0, sqrt(eigVal[2]) * eigVec[ , 2][1], sqrt(eigVal[2]) * eigVec[ , 2][2])
